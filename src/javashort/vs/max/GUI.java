/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javashort.vs.max;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

/**
 *
 * @author TÃ¶rcsi
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Number of elements:");

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Repeat");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(57, 57, 57)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            long k=Integer.parseInt(jTextField1.getText());
            if(k>0){
                process(k);
            }
        } catch (Exception e) {
            jTextArea1.append("Error: Not number!\n");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            long k=Integer.parseInt(jTextField1.getText());
            long n=Integer.parseInt(jTextField2.getText());
            if(k>0){
                processRepeat(k,n);
            }
        } catch (Exception e) {
            jTextArea1.append("Error: Not number!\n");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void process(long k){
        Random r = new Random();
        ArrayList<Double> list=new ArrayList<Double>();
        for(int i=0;i<k;i++){
            list.add(r.nextDouble());
        }
        long max=maxSearch(list);
        long sort=sortSearch(list);
        double o=sort/(double)max;
        jTextArea1.append("\nElement number: "+k+"\nMax: "+max/1000.0/1000.0+"ms\nSort: "+sort/1000.0/1000.0+"ms\nRate: "+o+"\n");
    }
    private void processRepeat(long k,long n){
        ArrayList<Long> max=new ArrayList<Long>();
        ArrayList<Long> sort=new ArrayList<Long>();
        Random r = new Random();
        for(int j=0;j<n;j++){
            ArrayList<Double> list=new ArrayList<Double>();
            for(int i=0;i<k;i++){
                list.add(r.nextDouble());
            }
            long maxl=maxSearch(list);
            long sortl=sortSearch(list);
            max.add(maxl);
            sort.add(sortl);
        }
        Collections.sort(max);
        Collections.sort(sort);
        
        long bmax=max.get(0);
        long bsort=sort.get(0);
        long wmax=max.get(max.size()-1);
        long wsort=sort.get(sort.size()-1);
        
        long avgmax=0;
        long avgsort=0;
        
        for(int i=0;i<max.size();i++){
            avgmax+=max.get(i);
            avgsort+=sort.get(i);
        }
        avgmax/=(double)max.size();
        avgsort/=(double)sort.size();
        
        double o=avgsort/(double)avgmax;
        
        jTextArea1.append("\n");
        jTextArea1.append("Element number: "+k+"\n");
        jTextArea1.append("Repeat number: "+n+"\n");
        jTextArea1.append("Avg max: "+avgmax/1000.0/1000.0+"ms\n");
        jTextArea1.append("Avg sort: "+avgsort/1000.0/1000.0+"ms\n");
        jTextArea1.append("Rate: "+o+"\n");
        
    }
    private long maxSearch(ArrayList<Double> list){
        long start=System.nanoTime();
        Double max=-Double.MAX_VALUE;
        for(Double d:list){
            if(d>max)
                max=d;
        }
        long end=System.nanoTime();
        return end-start;
    
    }
    private long sortSearch(ArrayList<Double> list){
        long start=System.nanoTime();
        Collections.sort(list);
        Double max=list.get(list.size()-1);
        long end=System.nanoTime();
        return end-start;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
